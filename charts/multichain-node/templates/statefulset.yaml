apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "multichain-node.fullname" . }}
  labels:
    {{- include "multichain-node.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "multichain-node.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "multichain-node.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "multichain-node.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: CHAINNAME
              value: {{ .Values.settings.chainName }}
            {{ if .Values.settings.connectToExistingChain }}
            - name: MAIN_NODE_HOST
              value: "{{ .Values.settings.mainNodeHost }}"
            {{ else }}
            - name: PARAM_TARGET_BLOCK_SIZE
              value: "target-block-time|30"
            - name: PARAM_ANYONE_CAN_CONNECT
              value: "anyone-can-connect|true"
            - name: PARAM_ANYONE_CAN_MINE
              value: "anyone-can-mine|true"
            - name: PARAM_PRIVATE_KEY_VERSION
              value: "private-key-version|80ea7b28"
            - name: PARAM_ADDRESS_CHECKSUM_VALUE
              value: "address-checksum-value|344cbb15"
            - name: PARAM_ADDRESS_PUBKEYHASH_VERSION
              value: "address-pubkeyhash-version|00f7391c"
            {{ end }}
            {{ if .Values.settings.privateKey }}
            - name: PRIVATE_KEY
              value: "{{ .Values.settings.privateKey }}"
            {{ end }}
            - name: NETWORK_PORT
              value: "{{ .Values.settings.p2pPort }}"
            - name: RPC_ALLOW_IP
              value: "0.0.0.0/0.0.0.0"
            - name: RPC_USER
              value: {{ .Values.settings.rpc.username }}
            - name: RPC_PASSWORD
              value: {{ .Values.settings.rpc.password }}
            - name: RPC_PORT
              value: "{{ .Values.settings.rpc.port }}"
          ports:
            - name: rpc
              containerPort: {{ .Values.settings.rpc.port }}
            - name: tcp
              containerPort: {{ .Values.settings.p2pPort }}
            - name: web
              containerPort: 2750
          volumeMounts:
            - mountPath: /data
              name: multichain-node-data
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
  {{- if not .Values.persistence.enabled }}
      volumes:
        - name: multichain-node-data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: multichain-node-data
        {{- with .Values.persistence.annotations }}
        annotations:
          {{- toYaml . | nindent 14 }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
        {{- end }}
        {{- end }}
  {{- end }}
